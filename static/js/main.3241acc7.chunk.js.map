{"version":3,"sources":["context/auth.js","PrivateRoute.js","pages/Login.js","pages/Wms.js","App.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","PrivateRoute","Component","component","rest","isAuthenticated","render","props","to","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Login","classes","useState","isLoggedIn","setLoggedIn","isError","setIsError","msgError","setMsgError","localStorage","getItem","hostName","setHostName","userName","setUserName","password","setPassword","setAuthTokens","apiPath","Container","maxWidth","CssBaseline","className","Avatar","Typography","variant","Box","bgcolor","borderColor","m","border","style","padding","textAlign","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","placeholder","type","Button","color","onClick","magentoApi","trim","axios","post","then","result","status","data","setItem","message","catch","console","log","Wms","App","authTokens","Provider","JSON","stringify","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3241acc7.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"./context/auth\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    const isAuthenticated = useAuth();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                isAuthenticated ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/\" />\n                )\n            }\n        />\n    );\n}\n\nexport default PrivateRoute;","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport { useAuth } from \"../context/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login() {\n    const classes = useStyles();\n    const defaultProps = {\n        bgcolor: 'background.paper',\n        borderColor: 'error.main',\n        m: 1,\n        border: 1,\n        style: { width: '100%', padding: '10px', textAlign: 'center' },\n    };\n    const [isLoggedIn, setLoggedIn] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [msgError, setMsgError] = useState(\"\");\n    const [hostName, setHostName] = useState(localStorage.getItem('api_host'));\n    const [userName, setUserName] = useState(localStorage.getItem('api_user'));\n    const [password, setPassword] = useState(localStorage.getItem('api_pass'));\n    const { setAuthTokens } = useAuth();\n    const apiPath = \"/rest/V1/integration/admin/token\";\n\n    function postLogin() {\n        let magentoApi = hostName.trim() + apiPath;\n\n        axios.post('https://wms.genmato.com/api/v1/login', {\n            \"host\": magentoApi,\n            \"username\":userName,\n            \"password\":password\n        }).then(result => {\n            if (result.status === 200) {\n                setAuthTokens(result.data);\n                setLoggedIn(true);\n                localStorage.setItem('api_host', hostName);\n                localStorage.setItem('api_user', userName);\n                localStorage.setItem('api_pass', password);\n            } else {\n                setIsError(true);\n                setMsgError(result.message);\n            }\n        }).catch(e => {\n            console.log(e);\n            //if (e.response.status === 401) {\n            //    setMsgError(e.response.data.message);\n            //} else {\n            //    setMsgError(e.message);\n            //}\n            setIsError(true);\n        });\n    }\n\n    if (isLoggedIn) {\n        return <Redirect to=\"/wms\" />;\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n\n                { isError && <Box {...defaultProps}> {msgError} </Box>}\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"hostname\"\n                        label=\"Magento Hostname\"\n                        name=\"hostname\"\n                        autoComplete=\"hostname\"\n                        autoFocus\n                        onChange={e => {\n                            setHostName(e.target.value);\n                        }}\n                        placeholder=\"https://www.mysite.com/\"\n                        value={hostName}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        onChange={e => {\n                            setUserName(e.target.value);\n                        }}\n                        value={userName}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={e => {\n                            setPassword(e.target.value);\n                        }}\n                        value={password}\n                    />\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={postLogin}\n                    >\n                        Sign In\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}","import React from \"react\";\n\nfunction Wms(props) {\n    return <div>WMS Page</div>;\n}\n\nexport default Wms;","import React, {useState} from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport PrivateRoute from './PrivateRoute';\nimport { AuthContext } from \"./context/auth\";\nimport Login from './pages/Login';\nimport Wms from './pages/Wms';\n\nfunction App(props) {\n    const [authTokens, setAuthTokens] = useState();\n\n    const setTokens = (data) => {\n        localStorage.setItem(\"tokens\", JSON.stringify(data));\n        setAuthTokens(data);\n    }\n\n    return (\n        <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n            <Router>\n                <div>\n                    <Route exact path=\"/\" component={Login} />\n                    <PrivateRoute path=\"/wms\" component={Wms} />\n                </div>\n            </Router>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}